[OktaIM2:group]
EVAL-dest = host
EVAL-vendor_product = "Okta"
FIELDALIAS-group-group_id = id as group_id
FIELDALIAS-id_as_serial = id AS serial
FIELDALIAS-profile_description_as_description = profile.description AS description
FIELDALIAS-profile_name_as_user = profile.name AS user
KV_MODE = json
category = Splunk App Add-on Builder
pulldown_type = 1
LOOKUP-group2app_lookup = okta2_app_group_lookup group_id as id OUTPUT app_id as accessible_apps
TIME_PREFIX = lastUpdated
TZ = UTC
LOOKUP-group2user_lookup = okta2_group_member_lookup group_id as id OUTPUT user_id as group_members

[OktaIM2:app]
EVAL-dest = host
EVAL-vendor_product = "Okta"
FIELDALIAS-app-app_id = id as app_id
FIELDALIAS-id_as_serial = id AS serial
FIELDALIAS-label_as_description = label AS description
KV_MODE = json
category = Splunk App Add-on Builder
pulldown_type = 1
TIME_PREFIX = lastUpdated
TZ = UTC

[OktaIM2:user]
EVAL-dest = host
EVAL-user_id = id
EVAL-vendor_product = "Okta"
FIELDALIAS-id_as_serial = id AS serial
FIELDALIAS-profile_displayName_as_description = profile.displayName AS description
FIELDALIAS-profile_login_as_user = profile.login AS user
KV_MODE = json
category = Splunk App Add-on Builder
pulldown_type = 1
LOOKUP-user2group_lookup = okta2_group_member_lookup user_id as id OUTPUT group_id
LOOKUP-user2app_lookup = okta2_app_user_lookup user_id as id OUTPUT app_id as accessible_apps
TIME_PREFIX = lastUpdated
TZ = UTC

[OktaIM2:log]
EVAL-app = if(mvindex(spath(_raw,"target{}.type"),0) == "AppInstance",mvindex(spath(_raw,"target{}.alternateId"),0),null)
FIELDALIAS-_Okta__as_vendor_product = "Okta" AS vendor_product
FIELDALIAS-actor_alternateId_as_user = actor.alternateId AS user
FIELDALIAS-client_ipAddress_as_src = client.ipAddress AS src
FIELDALIAS-client_ipAddress_as_src_ip = client.ipAddress AS src_ip
FIELDALIAS-host_as_dest = host AS dest
FIELDALIAS-log-user_id = actor.id AS user_id
FIELDALIAS-result = "outcome.result" AS result
FIELDALIAS-target_displayName_as_app = target{}
KV_MODE = json
LOOKUP-event_type_lookup = okta2_eventtype_lookup eventType "outcome.result" OUTPUT action event_type status
LOOKUP-user_detail_lookup = okta2_user_detail_lookup user_id OUTPUT firstName,lastName,loginName,email,secondEmail,primaryPhone,mobilePhone,state,city,countryCode,zipCode,streetAddress,status as user_status,created_time,lastUpdated_time,lastLogin_time,activated_time
category = Splunk App Add-on Builder
pulldown_type = 1
TIME_PREFIX = published
TZ = UTC
EVAL-targetAppDisplayName = if(mvfind(spath(_raw,"target{}.type"),"AppInstance")>=0,mvindex(spath(_raw,"target{}.displayName"),mvfind(spath(_raw,"target{}.type"),"AppInstance")),null)
EVAL-targetAppAlternateId = if(mvfind(spath(_raw,"target{}.type"),"AppInstance")>=0,mvindex(spath(_raw,"target{}.alternateId"),mvfind(spath(_raw,"target{}.type"),"AppInstance")),null)
EVAL-targetAppId = if(mvfind(spath(_raw,"target{}.type"),"AppInstance")>=0,mvindex(spath(_raw,"target{}.id"),mvfind(spath(_raw,"target{}.type"),"AppInstance")),null)
EVAL-targetUserGroupDisplayName = if(mvfind(spath(_raw,"target{}.type"),"UserGroup")>=0,mvindex(spath(_raw,"target{}.displayName"),mvfind(spath(_raw,"target{}.type"),"UserGroup")),null)
EVAL-targetUserGroupAlternateId = if(mvfind(spath(_raw,"target{}.type"),"UserGroup")>=0,mvindex(spath(_raw,"target{}.alternateId"),mvfind(spath(_raw,"target{}.type"),"UserGroup")),null)
EVAL-targetUserGroupId = if(mvfind(spath(_raw,"target{}.type"),"UserGroup")>=0,mvindex(spath(_raw,"target{}.id"),mvfind(spath(_raw,"target{}.type"),"UserGroup")),null)
EVAL-targetAppGroupDisplayName = if(mvfind(spath(_raw,"target{}.type"),"AppGroup")>=0,mvindex(spath(_raw,"target{}.displayName"),mvfind(spath(_raw,"target{}.type"),"AppGroup")),null)
EVAL-targetAppGroupAlternateId = if(mvfind(spath(_raw,"target{}.type"),"AppGroup")>=0,mvindex(spath(_raw,"target{}.alternateId"),mvfind(spath(_raw,"target{}.type"),"AppGroup")),null)
EVAL-targetAppGroupId = if(mvfind(spath(_raw,"target{}.type"),"AppGroup")>=0,mvindex(spath(_raw,"target{}.id"),mvfind(spath(_raw,"target{}.type"),"AppGroup")),null)
EVAL-targetUserDisplayName = if(mvfind(spath(_raw,"target{}.type"),"User")>=0,mvindex(spath(_raw,"target{}.displayName"),mvfind(spath(_raw,"target{}.type"),"User")),null)
EVAL-targetUserAlternateId = if(mvfind(spath(_raw,"target{}.type"),"User")>=0,mvindex(spath(_raw,"target{}.alternateId"),mvfind(spath(_raw,"target{}.type"),"User")),null)
EVAL-targetUserId = if(mvfind(spath(_raw,"target{}.type"),"User")>=0,mvindex(spath(_raw,"target{}.id"),mvfind(spath(_raw,"target{}.type"),"User")),null)
EVAL-targetAppUserDisplayName = if(mvfind(spath(_raw,"target{}.type"),"AppUser")>=0,mvindex(spath(_raw,"target{}.displayName"),mvfind(spath(_raw,"target{}.type"),"AppUser")),null)
EVAL-targetAppUserAlternateId = if(mvfind(spath(_raw,"target{}.type"),"AppUser")>=0,mvindex(spath(_raw,"target{}.alternateId"),mvfind(spath(_raw,"target{}.type"),"AppUser")),null)
EVAL-targetAppUserId = if(mvfind(spath(_raw,"target{}.type"),"AppUser")>=0,mvindex(spath(_raw,"target{}.id"),mvfind(spath(_raw,"target{}.type"),"AppUser")),null)
EVAL-targetPolicyEntityDisplayName = if(mvfind(spath(_raw,"target{}.type"),"PolicyEntity")>=0,mvindex(spath(_raw,"target{}.displayName"),mvfind(spath(_raw,"target{}.type"),"PolicyEntity")),null)
EVAL-targetPolicyEntityAlternateId = if(mvfind(spath(_raw,"target{}.type"),"PolicyEntity")>=0,mvindex(spath(_raw,"target{}.alternateId"),mvfind(spath(_raw,"target{}.type"),"PolicyEntity")),null)
EVAL-targetPolicyEntityId = if(mvfind(spath(_raw,"target{}.type"),"PolicyEntity")>=0,mvindex(spath(_raw,"target{}.id"),mvfind(spath(_raw,"target{}.type"),"PolicyEntity")),null)
EVAL-targetPolicyRuleDisplayName = if(mvfind(spath(_raw,"target{}.type"),"PolicyRule")>=0,mvindex(spath(_raw,"target{}.displayName"),mvfind(spath(_raw,"target{}.type"),"PolicyRule")),null)
EVAL-targetPolicyRuleAlternateId = if(mvfind(spath(_raw,"target{}.type"),"PolicyRule")>=0,mvindex(spath(_raw,"target{}.alternateId"),mvfind(spath(_raw,"target{}.type"),"PolicyRule")),null)
EVAL-targetPolicyRuleId = if(mvfind(spath(_raw,"target{}.type"),"PolicyRule")>=0,mvindex(spath(_raw,"target{}.id"),mvfind(spath(_raw,"target{}.type"),"PolicyRule")),null)
EVAL-user = if('actor.alternateId'="system@okta.com",spath(_raw,"target{0}.alternateId"), 'actor.alternateId')
EVAL-user_id = if('actor.alternateId'="system@okta.com",spath(_raw,"target{1}.id"), 'actor.id')

[source::...oktaGroupMemberChange_modalert.log*]
sourcetype = ta:oktaidentitycloudforsplunk:log

[source::...oktaUserStatusChange_modalert.log*]
sourcetype = ta:oktaidentitycloudforsplunk:log

[OktaIM2:addon]
REPORT-addonlogs = REPORT-addonlogs

[OktaIM2:appUser]
TIME_PREFIX = lastUpdated
TZ = UTC
EVAL-dest = host
EVAL-vendor_product = "Okta"
KV_MODE = json
category = Splunk App Add-on Builder
pulldown_type = 1
LOOKUP-app_detail_lookup = okta2_app_detail_lookup id as appid OUTPUT name as app_name, label as app_label
LOOKUP-user_detail_lookup = okta2_user_detail_lookup user_id as userid OUTPUT firstName,lastName,loginName,email,secondEmail,primaryPhone,mobilePhone,state,city,countryCode,zipCode,streetAddress,status as user_status,created_time,lastUpdated_time,lastLogin_time,activated_time

[OktaIM2:groupUser]
EVAL-dest = host
EVAL-vendor_product = "Okta"
KV_MODE = json
category = Splunk App Add-on Builder
pulldown_type = 1
LOOKUP-group_detail_lookup = okta2_group_detail_lookup id as groupid OUTPUT name as group_name, type as group_type, description as group_description
LOOKUP-user_detail_lookup = okta2_user_detail_lookup user_id as userid OUTPUT firstName,lastName,loginName,email,secondEmail,primaryPhone,mobilePhone,state,city,countryCode,zipCode,streetAddress,status as user_status,created_time,lastUpdated_time,lastLogin_time,activated_time

[source::...ta_okta_identity_cloud_for_splunk*.log*]
sourcetype = OktaIM2:addon
BREAK_ONLY_BEFORE = ^\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2},\d{3}

